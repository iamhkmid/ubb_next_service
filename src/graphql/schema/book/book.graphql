type Query {
  books(options: queryBookOptionsInput): [Book]
  book(bookId: ID, slug: ID): Book
  bookCategory(categoryId: ID!): BookCategory
  bookCategories: [BookCategory] 
}

type Mutation {
  addBook(data: addBookInput!): Book @auth(requires: ADMIN)
  updateBook(data: updateBookInput!): Book @auth(requires: ADMIN)
  deleteBook(bookId: ID!): Book @auth(requires: ADMIN)
  addBookCategory(data: addBookCategoryInput!): BookCategory @auth(requires: ADMIN)
  updateBookCategory (data: updateBookCategoryInput!): BookCategory @auth(requires: ADMIN)
  deleteBookCategory(categoryId: ID!): BookCategory @auth(requires: ADMIN)
}

input queryBookOptionsInput {
  categoryIds: [String]
  minAmount: Int
  maxAmount: Int
  take: Int
  cursor: String
  sortBy: EnumSortBookBy
}

enum EnumSortBookBy {
  NEW
}

input addBookInput {
  title: String!
  authorName: String!
  price: Int
  stock: Int
  publisher: String!
  categoryIds: [String]
  publicationYear: Int!
  description: String
  printType: String!
  numberOfPages: Int!
  isbn: String!
}

input updateBookInput {
  bookId: ID!
  title: String
  authorName: String
  price: Int
  stock: Int
  categoryIds: [String]
  publisher: String
  description: String
  publicationYear: Int
  printType: String
  numberOfPages: Int
  isbn: String
}

type deleteBook {
  id: ID
  title: String
  authorName: String
  price: Int
  numberOfPages: Int
  stock: Int
  publisher: String
  description: String
  printType: String
  isbn: String
  slug: String
  createdAt: Date
  updatedAt: Date
}

type Book {
  id: ID
  title: String
  authorName: String
  price: Int
  numberOfPages: Int
  stock: Int
  publisher: String
  description: String
  Images: [BookImage]
  Categories: [BookCategory]
  printType: String
  publicationYear: Int
  isbn: String
  slug: String
  createdAt: Date
  updatedAt: Date
}

type BookCategory {
  id: String
  name: String
  books: [Book]
  createdAt: Date
  updatedAt: Date
}

type BookImage {
  id: String
  publicId: String
  type: String
  url: String
  secureUrl: String
  createdAt: Date
  updatedAt: Date
}

input addBookCategoryInput {
  name: String!
}

input updateBookCategoryInput {
  categoryId: ID!
  name: String
}